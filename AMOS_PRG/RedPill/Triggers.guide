@DATABASE REDPILL GAME CREATOR
@Author Carlos Peris
@$VER: REDPILL V0.9.X (2023)

@NODE Always
Always: Condition is always true
Usage: Always

This condition is always triggered. Use it when you want a trigger to execute the actions every tick.

@ENDNODE Always

@NODE Once
Once: Condition will be true once, then always false
Usage: Once

This condition is only true once. After the creation of the game object condition will be true and after that it will always be false. Use it to initialize things in your game object.

@ENDNODE Once

@NODE Never
Never: Condition will never be true, preventing action/s execution
Usage: Never

This condition is never triggered, it is only useful when you want to deactivate temporally one of your triggers. It will consume some valuable CPU, if you won't use the trigger is is better to delete it.

@ENDNODE Never

@NODE Input_Left
Input Left: True if player is pressing left
Usage: Input Left <status> <player #>

Checks the if the status of left input is true for the specified player.

Example: Input Left Pressed Player 1 checks if left is pressed for Player 1.

@ENDNODE Input_Left

@NODE Input_Right
Input Right: True if player is pressing right
Usage: Input Right <status> <player #>

Checks the if the status of right input is true for the specified player.

@ENDNODE Input_Right

@NODE Input_Up
Input Up: True if player is pressing up
Usage: Input Up <status> <player #>

Checks the if the status of up input is true for the specified player.

@ENDNODE Input_Up

@NODE Input_Down
Input Down: True if player is pressing down
Usage: Input Down <status> <player #>

Checks the if the status of down input is true for the specified player.

@ENDNODE Input_Down

@NODE Input_Fire_1
Input Fire 1: True if player is pressing fire
Usage: Input Fire 1 <status> <player #>

Checks the if the status of up Fire 1 is true for the specified player.

@ENDNODE Input_Fire_1

@NODE Input_Fire_2
Input Fire 2: True if player is pressing the second fire button
Usage: Input Fire 2 <status> <player #>

Checks the if the status of fire 2 input is true for the specified player.

@ENDNODE Input_Fire_2

@NODE Idle
Idle: True when the object is not moving at all
Usage: Idle

True when the object is not moving at all, it is not related with player input.

@ENDNODE Idle

@NODE Collides_Player
Collides Player
Usage: Collides Player

Returns true when the object overlaps the collision box of object number 0.

@ENDNODE Collides_Player

@NODE Collides_H_Wall
Collides H Wall: Checks if object collides laterally with a solid tile
Usage: Collides H Wall

Returns true if the object has collides laterally with a solid tile of the map.

@ENDNODE Collides_H_Wall

@NODE Collides_Wall
Collides Wall: Checks if object collides with a solid tile
Usage: Collides Wall

Returns true if the object has collides with a solid tile of the map.

@ENDNODE Collides_Wall

@NODE Tile_is
Tile is: True when the object is this tile
Usage: Tile is <Tile number>


@ENDNODE Tile_is

@NODE X_Var_Triggered
X Var Triggered
Usage: X Var Triggered <global var> <boolean>

This condition will be true for one tick if boolean is true. For trigger vars this in when one action triggers this global var. For timers it is when the time finishes.
If the boolean value is false the trigger will be true except the tick when it is triggered.

@ENDNODE X_Var_Triggered

@NODE Var_True
Var True
Usage: Var True <global var>

Used to check if a boolean global var is true.

@ENDNODE Var_True

@NODE Var_Is
Var Is
Usage: <global var> <comparator> <number>

This condition will compare a global var with a number.

Example: Lives > 0 will be true when the global var "Lives" value is 1 or more.

@ENDNODE Var_Is

@NODE Var_False
Var False
Usage: Var False <global var>

Used to check if a boolean global var is false.

@ENDNODE Var_False

@NODE Countdown
Countdown: True after the time specified as parameter the condition
Usage: Countdown <miliseconds>

After the time specified as parameter the condition will return true once.

Example: Countdown 5000 will execute the trigger after 5 seconds have passed.

@ENDNODE Countdown

@NODE Position_X
Position X: Compares the X position of the object
Usage: Position X <comparison> <number>

@ENDNODE Position_X

@NODE Position_Y
Position Y: Compares the Y position of the object
Usage: Position Y <comparison> <number>

@ENDNODE Position_Y

@NODE Collides_Obj
Collides Obj: Check if collides with the specified object
Usage: Collides Object <game object>

Returns true when the object overlaps the collision box of the specified game object. When the game object is non static, any game object instance will trigger the condition.

@ENDNODE Collides_Obj

@NODE Target_Pos_X
Target Pos X
Usage: Target Pos X <comparator> <game object>

Compares the position in the x axis versus the position of the specified static game object.

Example: Target Pos X < My Player will be true when the x coordinate of the object is less than the x coordinate of My Player object.

@ENDNODE Target_Pos_X

@NODE Target_Pos_Y
Target Pos Y
Usage: Target Pos Y <comparator> <game object>

Compares the position in the y axis versus the position of the specified static game object.

Example: Target Pos Y < My Player will be true when the y coordinate of the object is less than the y coordinate of My Player object.

@ENDNODE Target_Pos_Y

@NODE Grounded
Grounded: True when the object is in the floor
Usage: Grounded

True when the object is in the floor

@ENDNODE Grounded

@NODE Not_Grounded
Not Grounded: True when the object is not in the floor
Usage: Not Grounded

True when the object is not in the floor

@ENDNODE Not_Grounded

@NODE Timer_active
Timer active
Timer Active <global var>

Use this condition to check if a timer has been activated.

@ENDNODE Timer_active

@NODE Has_Col_Left
Has Col Left: Left side of object has collided with the Map
Usage: Has Col Left

Left side of object has collided with the Map

@ENDNODE Has_Col_Left

@NODE Has_Col_Right
Has Col Right: Right side of object has collided with the Map
Usage: Has Col Right

Right side of object has collided with the Map

@ENDNODE Has_Col_Right

@NODE Has_Col_Up
Has Col Up: Upper side of object has collided with the Map
Usage: Has Col Up

Upper side of object has collided with the Map

@ENDNODE Has_Col_Up

@NODE Has_Col_Down
Has Col Down: Lower side of object has collided with the Map
Usage: Has Col Down

Lower side of object has collided with the Map

@ENDNODE Has_Col_Down

@NODE Side_X
Side X: Checks if object is looking left or right
Usage: Side X <Left/Right>

Checks if object is looking left or right

@ENDNODE Side_X

@NODE Dist_to_Target
Dist to Target
Usage: Dist to Target <comparator> <number>

Returns true when the comparison of the distance to the target game object and the specified number is true.

The target can be specified with the action Set Target.

@ENDNODE Dist_to_Target

@NODE Speed_X
Speed X: Checks the speed in X
Usage: Speed X <comparator> <number>

Checks the speed in X

@ENDNODE Speed_X

@NODE Speed_Y
Speed Y: Checks the speed in Y
Usage: Speed X <comparator> <number>

Checks the speed in Y


@ENDNODE Speed_Y

@NODE Speed_(Angle)
Speed (Angle): Compares the object global speed
Usage: Speed <comparator> <number>

Compares the object global speed

@ENDNODE Speed_(Angle)

@NODE Angle_is
Angle is: Compares the angle of the object
Usage: Angle is <comparator> <number>

Compares the angle of the object

@ENDNODE Angle_is

@NODE Anim_is
Anim is: Check if this object is playing this anim
Usage: Anim is <anim>

Check if this object is playing this anim

@ENDNODE Anim_is

@NODE Frame_is
Frame is: Check the current frame
True when the frame is the specified one, not inside the animation but the 
absolute one.

Usage: Frame <#frame>

@ENDNODE Frame_is

@NODE Anim_finishes
Anim finishes: Check if the animation has finished playing
True when animation has finished playing

Usage: Anim finishes <animation> <check mirror anim>

@ENDNODE Anim_finishes

@NODE Tile_Comp
Tile Comp: Compared the tile the object is in
It usess the center of the object collision box

Usage: Tile Comp <comparator> <number>

@ENDNODE Tile_Comp

@NODE Free_Tile
Free Tile: Checks if the object is in a non solid tile
Usage: Free Tile <x offset> <y offset>

x and y are in tiles. Left and up are negative, Right and down use positive values.


@ENDNODE Free_Tile

@NODE Solid_Tile
Solid Tile: Checks if the object is in a solid Tile

Usage: Solid Tile

@ENDNODE Solid_Tile

@NODE Level_is
Level is: Compares the current level number
Usage: Level is <comparator> <number>
This condition checks if the game is in a specific level. With the comparator you can apply the condition to multiple levels.
Example: Level is > 0 checks that the current level is not level 0.

@ENDNODE Level_is

@NODE Collides_Type
Collides Type
Usage: Collides Object <game object type>

Returns true when the object overlaps the collision box of any object of the specified game object type.

@ENDNODE Collides_Type

@NODE Is_on_screen
Is on screen: Checks if the object is inside the screen
Usage: Is on screen


@ENDNODE Is_on_screen

@NODE Is_off_screen
Is off screen: Checks if the object is outside the screen
Usage: Is off screen


@ENDNODE Is_off_screen

@NODE Anim_is_not
Anim is not: Checks if the anim is not this one
Usage: Anim is not <anim>


@ENDNODE Anim_is_not

@NODE CD32_Play
CD32 Play
Usage: CD32 Play <status> <player #>

Checks the if the status of the CD32 Play button is true for the specified player.

@ENDNODE CD32_Play

@NODE CD32_Reverse
CD32 Reverse
Usage: CD32 Reverse <status> <player #>

Checks the if the status of the CD32 Reverse button is true for the specified player.

@ENDNODE CD32_Reverse

@NODE CD32_Forward
CD32 Forward
Usage: CD32 Forward <status> <player #>

Checks the if the status of the CD32 Forward button is true for the specified player.

@ENDNODE CD32_Forward

@NODE CD32_Green
CD32 Green
Usage: CD32 Green <status> <player #>

Checks the if the status of the CD32 Green button is true for the specified player.

@ENDNODE CD32_Green

@NODE CD32_Yellow
CD32 Yellow
Usage: CD32 Yellow <status> <player #>

Checks the if the status of the CD32 Yellow button is true for the specified player.

@ENDNODE CD32_Yellow

@NODE CD32_Red
CD32 Red
Usage: CD32 Red <status> <player #>

Checks the if the status of the CD32 Red button is true for the specified player.

@ENDNODE CD32_Red

@NODE CD32_Blue
CD32 Blue
Usage: CD32 Blue <status> <player #>

Checks the if the status of the CD32 Blue button is true for the specified player.

@ENDNODE CD32_Blue

@NODE Input_Options
Input Options
Usage: Input Option <status>

Checks the if the status of the key assigned to input is true

@ENDNODE Input_Options

@NODE GO_Custom1_is
GO Custom1 is
Usage: GO Custom 1 <comparator> <number>

This condition will compare the game object var #1 with a number.

@ENDNODE GO_Custom1_is

@NODE GO_Custom2_is
GO Custom2 is
Usage: GO Custom 2 <comparator> <number>

This condition will compare the game object var #2 with a number.

@ENDNODE GO_Custom2_is

@NODE GO_Timer_Trig
GO Timer Trig
Usage: GO Timer Trig


This condition will be true when the game object timer is over.


@ENDNODE GO_Timer_Trig

@NODE On_Level_Load
On Level Load: Triggered each time a level finishes loading.
Usage: On Level Load

This condition is triggered each time a level is loaded. It is useful to initialize anything after a level is loaded.

@ENDNODE On_Level_Load

@NODE Collides_in_X
Collides in X: Checks if collides with the target in the X axis
Usage: Collides in X


@ENDNODE Collides_in_X

@NODE Collides_in_Y
Collides in Y: Checks if collides with the target in the Y axis
Usage: Collides in Y


@ENDNODE Collides_in_Y

@NODE On_FadeOut_Over
On FadeOut Over: True after a fade out finishes
Usage: On FadeOut Over


@ENDNODE On_FadeOut_Over

@NODE Timer_not_active
Timer not active
Usave: Timer not active <global var>

Use this condition to check if a timer is not active.

@ENDNODE Timer_not_active

@NODE Answer
Answer: Checks the answer to the Question asked in a dialogue

@ENDNODE Answer

@NODE Probability
Probability: Between 0 and 100 to happen
Usage: Probability <number>

@ENDNODE Probability

@NODE Probab._Var
Probab. Var: It is true with a defined probability

@ENDNODE Probab._Var

@NODE Collides_Target
Collides Target: Checks if the object is colliding with its target

@ENDNODE Collides_Target

@NODE Var_comp_Var
Var comp Var: Compares two variables


@ENDNODE Var_comp_Var

@NODE Anim_Comp
Anim Comp: Compares the current Animation of the Object
Usage: Anim Comp <comparator> <number>

Checks the current active Animation of the Object


@ENDNODE Anim_Comp

@NODE Tile_on_Screen
Tile on Screen: Does actions for each tile of this type in the screen
If there is a tile in the screen, for each tile the actions will be executed using the position of the tile as the object position.

Second parameter is the border tiles, to check outside the screen.

@ENDNODE Tile_on_Screen

@NODE Tile_on_Map
Tile on Map: Does action for each tile of this type in the level map
If there is a tile in the map, for each tile the actions will be executed using the position of the tile as the object position.

@ENDNODE Tile_on_Map

@NODE Input_Active
Input Active: Checks if the Input is Enabled or disabled

@ENDNODE Input_Active

@NODE Grounded
Grounded: True when the object is(not) in the floor, depending on parameter
Usage: Grounded <yes/no> <#ticks>

True when the object is in the floor and first parameter is true
True when the object is not in the floor and first parameter is false
ticks > 0 for coyote time, will return true if it was grounded #ticks ago.

@ENDNODE Grounded

@NODE Obj_Display_X
Obj Display X: Compares screen position X of the object
Usage Obj Display X <comparator> <number>

@ENDNODE Obj_Display_X

@NODE Obj_Display_Y
Obj Display Y: Compares screen position Y of the object
Usage Obj Display X <comparator> <number>

@ENDNODE Obj_Display_Y

@NODE Is_Net_Remote
Is Net Remote: Checks if a player is the remote one or the local one
Usage: Is Net remote <#Player> <true/false>

For true the condition will check if machine is server one and Player is 1, or if machine is client and Player is 2.

@ENDNODE Is_Net_Remote

@NODE On_Net_Connect
On Net Connect: Checks if TCP connexion has been established or not

@ENDNODE On_Net_Connect

@NODE Repeat_every
Repeat every: Every time the specified time goes by will return true
Usage: Repeat every <miliseconds>

Every time the specified time goes by the condition will return true once.

Example: Repeat every 5000 will execute the trigger after 5 seconds have passed.

@ENDNODE Repeat_every

@NODE Tile_Type_is
Tile Type is: Checks the type of tile the object is in
Usage: Tile Type is <type_of_tile>

Checks if the tile the object is Non Solid, Platform or Solid

@ENDNODE Tile_Type_is

@NODE Is_NTSC
Is NTSC: Checks if the machine the game is running on is in NTSC mode

@ENDNODE Is_NTSC

@NODE Is_AGA
Is AGA: Checks if the machine the game is running on is AGA

@ENDNODE Is_AGA

@NODE On_Landed
On Landed: It is triggered the moment the object hits the ground

Only triggered the frame the objects hit the ground

@ENDNODE On_Landed

@NODE Contains_Tile
Contains Tile: Detects if the object area is colliding with a Tile

@ENDNODE Contains_Tile

@NODE Col_Type_Count
Col Type Count: Counts the number of objects of the defined type colliding with the object
Usage: Col Obj Count <Obj type> <number>

True if the number of objets colliding is at least <number>

@ENDNODE Col_Type_Count

@NODE To_All_Colls
To All Colls: Executes a object trigger in all colliding objects
Usage: To All Cools <trigger number>
Col Obj/Type Count trigger must be executed first.

The parameter is the trigger to be executed from the COLLIDED object, not the current one.
If there are colliding objects the current trigger will be executed for the current object.


@ENDNODE To_All_Colls

@NODE Tile_on_Border
Tile on Border: Does actions for each tile of this type in the border of the screen
If there is a tile in the border of the screen, for each tile the actions will be executed using the position of the tile as the object position.

Usage: Tile on Border <#Tile>

@ENDNODE Tile_on_Border

@NODE Col_Obj_Count
Col Obj Count: Counts the number of objects of that type colliding with the object
Usage: Col Obj Count <Obj> <number>

True if the number of objets colliding is at least <number>

@ENDNODE Col_Obj_Count

@NODE Display_Ready
Display Ready: True when the display is active after warm up

Usage: Display Ready

@ENDNODE Display_Ready

@NODE CD_Playing
CD Playing: Checks if CD audio is playing or not
Usage: CD Playing <boolean> 

@ENDNODE CD_Playing

@NODE Tile_Tag_is
Tile Tag is: Checks the tile tag the object is in
Usage: Tile Tag is <tag> <boolean>

Set second parameter to false to check if the tile has other tag than the specified one.
Tile tags can be set in the Tile Properties screen inside the Tileset menu.

@ENDNODE Tile_Tag_is

@NODE Cam_Pos_X
Cam Pos X: Checks the horizontal camera position
Usage: Cam Pos X <comparator> <number> 

@ENDNODE Cam_Pos_X

@NODE Cam_Pos_Y
Cam Pos Y: Checks the vertical camera position
Usage: Cam Pos Y <comparator> <number> 

@ENDNODE Cam_Pos_Y

@NODE Contains_Tile_Tag
Contains Tile Tag: Checks if tiles object is in contact with contains a tag
Usage: Contains Tile Tag <tag> <boolean>

Set second parameter to false to check if the tile has other tag than the specified one.
Tile tags can be set in the Tile Properties screen inside the Tileset menu.

@ENDNODE Contains_Tile_Tag

@NODE Can_Anim_Start
Can Anim Start: Cheks if the anim has finished or it is interruptible
Usage: Can Anim Start <boolean>

Set boolean to False to check the contrary

@ENDNODE Can_Anim_Start

@NODE Anim_Frame_is
Anim Frame is: Checks the current animation frame

@ENDNODE Anim_Frame_is

@NODE Obj_Type_Count
Obj Type Count: Counts the number of objects of one type and compares it to a number.
Usage: Obj Type Count <comparison> <number>

@ENDNODE Obj_Type_Count

@NODE Obj_Count
Obj Count: Counts the number of objects and compares it to a number.
Usage: Obj Count <comparison> <number>

@ENDNODE Obj_Count

@NODE From_Editor
From Editor: Checks if the game is running from editor or standalone
Usage: From Editor <boolean>

To check if game is running from Editor use From Editor TRUE. To check if game is running from Player use From Editor FALSE.

@ENDNODE From_Editor

@NODE CPU_is
CPU is: Checks the Motorola processor
Usage: CPU is <comparison> <number>

0-68000, 1-68010, 2-68020, 3-68030, 4-68040, 8-Apollo

@ENDNODE CPU_is

@NODE Is_attached
Is attached: Checks if the object is attached to another one
Usage: Is attached True/False

@ENDNODE Is_attached
>
>
@NODE Nothing
Nothing: No action
Usage: Nothing

This action is the lack of action. Use it only when you want to temporally disable a trigger action.

@ENDNODE Nothing

@NODE Set_Speed_X
Set Speed X: Changes the speed of the object in the horizontal axis

@ENDNODE Set_Speed_X

@NODE Set_Speed_Y
Set Speed Y: Changes the speed of the object in the vertical axis

@ENDNODE Set_Speed_Y

@NODE Set_Acc_X
Set Acc X: Changes the acceleration (speed change) in the horizontal axis

@ENDNODE Set_Acc_X

@NODE Set_Acc_Y
Set Acc Y: Changes the acceleration (speed change) in the vertical axis

@ENDNODE Set_Acc_Y

@NODE Play_Anim
Play Anim: Plays an animation

@ENDNODE Play_Anim

@NODE Stop_Anim
Stop Anim: Stops the animation

@ENDNODE Stop_Anim

@NODE Resume_Anim
Resume Anim: Resumes the animation

@ENDNODE Resume_Anim

@NODE Turn_Back
Turn Back: Changes the side the object is moving in X
If the current animation has a Mirro anim the mirron anim will play

@ENDNODE Turn_Back

@NODE Deactivate
Deactivate: Same as destroy. Do not use, Deprecated

@ENDNODE Deactivate

@NODE Destroy
Destroy: The object will be destroyed and not processed anymore

@ENDNODE Destroy

@NODE Random_Dir_4
Random Dir 4: The object will set speed to 1 in one random direction

@ENDNODE Random_Dir_4

@NODE Change_tile
Change tile: Changes the tile the object is in.

@ENDNODE Change_tile

@NODE Go_to_level
Go to level: Changes the level for the one specified
Usage: Go to Level <level #>

Changes the loaded level. All non static objects will be deleted.

@ENDNODE Go_to_level

@NODE Move_to_col
Move to col: The object that last collided is moved to this object position

@ENDNODE Move_to_col

@NODE Time_to_live
Time to live: After the time in ms has passed the object is destroyed

@ENDNODE Time_to_live

@NODE Instantiate
Instantiate: Creates another new game object based on a non static Object
The position is random inside the Object width and height

@ENDNODE Instantiate

@NODE Trig_Var_X
Trig Var X: For trigger Vars, this activates the Trigger for one frame

@ENDNODE Trig_Var_X

@NODE Toggle_Var
Toggle Var: For boolean Vars, it changes the current value

@ENDNODE Toggle_Var

@NODE Set_Var
Set Var: Sets a global variable to a value

@ENDNODE Set_Var

@NODE Inc_Var
Inc Var: Increments the global variable by a value

@ENDNODE Inc_Var

@NODE Activate_Timer
Activate Timer: Activates a Timer variable, time starts to count

@ENDNODE Activate_Timer

@NODE Set_Text
Set Text

@ENDNODE Set_Text

@NODE Load_Bitmap
Load Bitmap: Unused for now

@ENDNODE Load_Bitmap

@NODE Quit
Quit: Just quits the game
Usage: Quit

Exits the current game and exits to the operating system.

@ENDNODE Quit

@NODE Set_Position
Set Position: Sets the position of the object

@ENDNODE Set_Position

@NODE Inv_Speed_X
Inv Speed X: Horizontal speed of the object is inverted

@ENDNODE Inv_Speed_X

@NODE Inv_Speed_Y
Inv Speed Y: Vertical speed of the object is inverted

@ENDNODE Inv_Speed_Y

@NODE Set_Target
Set Target: Sets the target object

Usage: Set Target <staticobject>


@ENDNODE Set_Target

@NODE Set_Position_X
Set Position X: Sets the horizontal position of the object

Usage: Set Position X <number>

@ENDNODE Set_Position_X

@NODE Set_Position_Y
Set Position Y: Sets the vertical position of the object

Usage: Set Position Y <number>

@ENDNODE Set_Position_Y

@NODE Set_Thrust
Set Thrust: Sets the speed of the object according to its angle

@ENDNODE Set_Thrust

@NODE Inc_Thrust
Inc Thrust: Increments the speed of the object according to its angle

@ENDNODE Inc_Thrust

@NODE Set_Angle
Set Angle: Sets the angle of the object
Usage: Set Angle <angle in degress>

The angle of the object is used when using Thurst funcions and in visuals when using Play anim by angle.
Angle goes from 0 to 359, 0 makes the objects to point up, 90 points right, etc.

@ENDNODE Set_Angle

@NODE Inc_Angle
Inc Angle: Increments the angle of the object
Usage: Inc Angle <angle in degress>

The angle of the object is used when using Thurst funcions and in visuals when using Play anim by angle.
Angle goes from 0 to 359, 0 makes the objects to point up, 90 points right, etc.

@ENDNODE Inc_Angle

@NODE Frame_by_Angle
Frame by Angle: Sets the frame according to the angle based on the object direction angle.
Usage: Frame by Angle <Animation>

@ENDNODE Frame_by_Angle

@NODE Speed_On_Col
Speed On Col: Specifies how object speeds reacts to a collision with the map

Usage: Speed On Col <number>

When colliding the speed of the object is multiplied by the number.

@ENDNODE Speed_On_Col

@NODE Play_Mod+SFX
Play Mod+SFX: Plays a mod reserving the first 3 channels for the music

Usage: Play Mod+SFX <mod number>

@ENDNODE Play_Mod+SFX

@NODE Stop_Mod
Stop Mod: Stops the mod currently playing

@ENDNODE Stop_Mod

@NODE Play_Sound
Play Sound: Plays a sound effect

Usage: Play Sound <sfx number>

@ENDNODE Play_Sound

@NODE Set_Gravity
Set Gravity: Sets the gravity of the game for the physic objects

Usage: Set gravity <number>

@ENDNODE Set_Gravity

@NODE Set_Weight
Set Weight: Sets the weight of the object

Usage: Set Weight <number>

@ENDNODE Set_Weight

@NODE Overwrite_Color
Overwrite Color: Changes the color specified in the Screen menu

@ENDNODE Overwrite_Color

@NODE Overwrite_Gradient
Overwrite Gradient: Changes the Gradient specified in the Screen menu

@ENDNODE Overwrite_Gradient

@NODE Camera_Follow
Camera Follow: Makes the camera to follow a specific object

Usage: Camera Follow <object>

@ENDNODE Camera_Follow

@NODE Next_Level
Next Level
Usage: Next level

Loads the next consecutive level. All non static objects will be deleted.

@ENDNODE Next_Level

@NODE Reload_Level
Reload Level
Usage: Reload level

Reloads the current level. All non static objects will be deleted. It is useful for when a live is lost and you want the level and objects to get back to previous state.

@ENDNODE Reload_Level

@NODE Restart_Level
Restart Level
Usage: Restart Level

Restarts the current level. All non static objects will be deleted but the map will remain the same. It is useful for when a live is lost and you want the level keep the current state.

@ENDNODE Restart_Level

@NODE Change_Offset
Change Offset: Changes the object offset values
Usage: Change Offset <offset x> <offset y>

Use it with caution

@ENDNODE Change_Offset

@NODE Change_Size
Change Size: Changes the object width and height
Usage: Change Size <width> <height>

Use it with caution

@ENDNODE Change_Size

@NODE HUDLabel_On
HUDLabel On
Usage: Hud Label On <label #>

Activates a HUD item.

@ENDNODE HUDLabel_On

@NODE HUDLabel_Off
HUDLabel Off
Usage: Hud Label Off

Deactivates a HUD item.

@ENDNODE HUDLabel_Off

@NODE Camera_Pos
Camera Pos: Sets the camera position

Usage: Camera Pos <x> <y>

@ENDNODE Camera_Pos

@NODE Camera_Inc
Camera Inc: Modifies the camera position

Usage: Camera Pos <x inc> <y inc> 

@ENDNODE Camera_Inc

@NODE Set_Visible
Set Visible: Makes the object visible or not

Usage: Set Visible <true or false>

@ENDNODE Set_Visible

@NODE Screen_shake
Screen shake: Makes the screen shake

Usage: Screen Shake <Force> <Time in milis>

@ENDNODE Screen_shake

@NODE Screen_flash
Screen flash: Makes the screen flash

Usage: Screen Flash <Time in milis>

@ENDNODE Screen_flash

@NODE Set_var_to_var
Set var to var: Sets the first variable with the value of the second one

@ENDNODE Set_var_to_var

@NODE Inc_var_with_var
Inc var with var: Modifies the first variable with the value of the second one

@ENDNODE Inc_var_with_var

@NODE Instantiate_X
Instantiate X: Creates another new game object based on a non static Object

@ENDNODE Instantiate_X

@NODE Instantiate_Y
Instantiate Y: Creates another new game object based on a non static Object

@ENDNODE Instantiate_Y

@NODE InstantiateXY
InstantiateXY: Creates another new game object based on a non static Object

@ENDNODE InstantiateXY

@NODE Inc_Pos
Inc Pos

@ENDNODE Inc_Pos

@NODE Set_Global_RND
Set Global RND

@ENDNODE Set_Global_RND

@NODE Set_Custom1
Set Custom1

@ENDNODE Set_Custom1

@NODE Set_Custom2
Set Custom2

@ENDNODE Set_Custom2

@NODE Inc_Custom1
Inc Custom1

@ENDNODE Inc_Custom1

@NODE Inc_Custom2
Inc Custom2

@ENDNODE Inc_Custom2

@NODE Set_GO_Timer
Set GO Timer

@ENDNODE Set_GO_Timer

@NODE Set_Custom1_RND
Set Custom1 RND

@ENDNODE Set_Custom1_RND

@NODE Set_Custom2_RND
Set Custom2 RND

@ENDNODE Set_Custom2_RND

@NODE Set_GO_Timer_RND
Set GO Timer RND

@ENDNODE Set_GO_Timer_RND

@NODE Global_to_Spd_X
Global to Spd X

@ENDNODE Global_to_Spd_X

@NODE Global_to_Spd_Y
Global to Spd Y

@ENDNODE Global_to_Spd_Y

@NODE Set_Pos_to_Obj
Set Pos to Obj

@ENDNODE Set_Pos_to_Obj

@NODE Play_Mod
Play Mod

@ENDNODE Play_Mod

@NODE Hit>Set_Custom1
Hit
@NODE Hit>Set_Custom1
Set Custom1

@ENDNODE Hit>Set_Custom1

@NODE Hit>Set_Custom2
Hit
@NODE Hit>Set_Custom2
Set Custom2

@ENDNODE Hit>Set_Custom2

@NODE Hit>Inc_Custom1
Hit
@NODE Hit>Inc_Custom1
Inc Custom1

@ENDNODE Hit>Inc_Custom1

@NODE Hit>Inc_Custom2
Hit
@NODE Hit>Inc_Custom2
Inc Custom2

@ENDNODE Hit>Inc_Custom2

@NODE Halt_Triggers
Halt Triggers

@ENDNODE Halt_Triggers

@NODE Mutate_To
Mutate To

@ENDNODE Mutate_To

@NODE Show_Text
Show Text
Usage: Show Text <text #>

Pauses the game and show the specified text number. Texts are defined in the Game Setup screen.

@ENDNODE Show_Text

@NODE Show_Dialog
Show Dialog
Usage: Show Dialog <text #> <text #>

Pauses the game and show the specified text number in the second parameter with the title text specified in the first parameter. Texts are defined in the Game Setup screen.

@ENDNODE Show_Dialog

@NODE Attach_to
Attach to: Set an object position relative to the one it is attached to.
Usage: Attach to <Object> <Mov direction>

Mov direction parameter specifies how the object reacts when the object it is attached to moves: 0-no change, 1-lateral, 2-360

@ENDNODE Attach_to

@NODE Detach
Detach: Removes the attachment of the object

@ENDNODE Detach

@NODE Attach_Offset
Attach Offset: Changes relative offset X and Y of the object to the object it is attached to.
Usage: <Attach OffsetX> <OffsetY>

@ENDNODE Attach_Offset

@NODE HUD_On
HUD On: Turns on the HUD, the place where usually lives and score are displayed.
Usage: Hud On

@ENDNODE HUD_On

@NODE HUD_Off
HUD Off: Turns off the HUD, the place where usually lives and score are displayed.
Usage: Hud Off

@ENDNODE HUD_Off

@NODE GO_Blink
GO Blink: Makes the object blink for some frames
Usage: GO Blink <#frames>

@ENDNODE GO_Blink

@NODE GO_Flash
GO Flash: Makes the objects flash for some frames
Usage: GO Flash <#frames>

@ENDNODE GO_Flash

@NODE Keep_on_screen
Keep on screen: Forces the object to be inside the screen

@ENDNODE Keep_on_screen

@NODE Change_Tiles
Change Tiles: Changes all the tiles inside the collision box of the object

@ENDNODE Change_Tiles

@NODE Save_Checkpoint
Save Checkpoint: Saves the current position of the object

@ENDNODE Save_Checkpoint

@NODE Load_Checkpoint
Load Checkpoint: Moves the object to the saved checkpoint position

@ENDNODE Load_Checkpoint

@NODE Reset_Checkpoint
Reset Checkpoint: Erased the saved checkpoint

@ENDNODE Reset_Checkpoint

@NODE Change_Type
Change Type: Changes the type of the object

@ENDNODE Change_Type

@NODE Fade_Out
Fade Out: Fades to black the screen 

@ENDNODE Fade_Out

@NODE Fade_In
Fade In: Fades the screen from black

@ENDNODE Fade_In

@NODE Keep_on_map
Keep on map: forces the object to be inside the screen coordinates

@ENDNODE Keep_on_map

@NODE Check_Exits
Check Exits: Checks if the object is outside the map and needs to load another one.
The setup of the map exits is done in the Level Properties screen 

@ENDNODE Check_Exits

@NODE Set_Exit_U
Set Exit U: Sets the level up to the current one

@ENDNODE Set_Exit_U

@NODE Set_Exit_D
Set Exit D: Sets the level down of the current one

@ENDNODE Set_Exit_D

@NODE Set_Exit_L
Set Exit L: Sets the level on the left of the current one

@ENDNODE Set_Exit_L

@NODE Set_Exit_R
Set Exit R: Sets the level on the right of the current one

@ENDNODE Set_Exit_R

@NODE Hitstop
Hitstop: Stops the display for some frames

@ENDNODE Hitstop

@NODE Impact
Impact: If has collided with another object it pushes it

@ENDNODE Impact

@NODE Recoil
Recoil: The objects moves backwards some pixels.

@ENDNODE Recoil

@NODE Set_C1_with_Var
Set C1 with Var: Sets Object Var 1 with the content of a global Var

@ENDNODE Set_C1_with_Var

@NODE Inc_C1_with_Var
Inc C1 with Var: Increases custom var 1 with the content of a global Var

@ENDNODE Inc_C1_with_Var

@NODE Set_C2_with_Var
Set C2 with Var: Sets Object Var 2 with the content of a global Var

@ENDNODE Set_C2_with_Var

@NODE Inc_C2_with_Var
Inc C2 with Var: Increases custom var 2 with the content of a global Var

@ENDNODE Inc_C2_with_Var

@NODE Sort_by_Z
Sort by Z: Sorts objects based on its Z (depth) value

This allows objects to be rendered to screen following this order

@ENDNODE Sort_by_Z

@NODE Set_Z_From_Y
Set Z From Y: Sets the Z value of the object to the vertical position of the object.

This means objects in lower vertical positions are closer and objects that have a lower Y position are further. 

@ENDNODE Set_Z_From_Y

@NODE Play_SFX_L+R
Play SFX L+R: Plays a sound in the left and right channels

Usage: Play SFX L+R <#sound>

@ENDNODE Play_SFX_L+R

@NODE New_Question
New Question: Tells the system a new question is being set up

Usage: New Question <#questionId> <text>

questionId is just a number to identify the question in other triggers. 

After this trigger multiple Add Answer can be added. To show the question and possible answers to the player Ask Question must be used.

@ENDNODE New_Question

@NODE Add_Answer
Add Answer: Adds a possible answer to the current question being set up

Usage: Add Answer <value> <text> 

Value is what will be be result in case this answer is selected.

@ENDNODE Add_Answer

@NODE Ask_Question
Ask Question: Show the previously set up Question to the user.
Requires that New Question and one or more Add Answers have been executed.

@ENDNODE Ask_Question

@NODE Angle_to_Target
Angle to Target: Changes the object angle based on its target
It makes the object to point to the current target.

The target can be set up with Set Target for example.

@ENDNODE Angle_to_Target

@NODE Tiled_Move
Tiled Move: Tile based movement
Usage: Tiled Move <x> <y>

Moves the object <x> tiles in horizontal axis and <y> tiles in the vertical axis. 

Example: Tiled Move 1 0 moves the object one tile to the right. 

@ENDNODE Tiled_Move

@NODE Tiled_Push
Tiled Push: Pushes away the object last collided.
Usage: Tiled Push

Pushes away the object last collided. Usually used together with a Collision condition trigger and after a Tiled Move.

@ENDNODE Tiled_Push

@NODE Play_CD32
Play CD32: Plays an audio track in CD32 (First track is 1)

@ENDNODE Play_CD32

@NODE Target_closest
Target closest: Sets target to the closest object of one type

@ENDNODE Target_closest

@NODE Count_Type
Count Type: Counts active object on one type

@ENDNODE Count_Type

@NODE Mul_Speed_Var
Mul Speed Var: Multiplies the speed by a Variable

@ENDNODE Mul_Speed_Var

@NODE Set_Display_Pos
Set Display Pos: Sets the position relative to the screen.

@ENDNODE Set_Display_Pos

@NODE Go_to_<Var>_Level
Go to <Var
@NODE Go_to_<Var>_Level
 Level: Loads the level specified in the variable.

@ENDNODE Go_to_<Var>_Level

@NODE Follow_Obj_8_Dir
Follow Obj 8 Dir: Follow Object specified with the speed specified in a variable.
Usage: Follow Obj 8 Dir: <Obj> <Speed>

Will follow the object in angles of 45 degress

@ENDNODE Follow_Obj_8_Dir

@NODE Input_Active
Input Active: Enables or disabled the input from player, only ESC key input is always enabled.

@ENDNODE Input_Active

@NODE Show_Hiscores
Show Hiscores: Displays the Hall of fame window, game will halt.

@ENDNODE Show_Hiscores

@NODE Enter_Hiscore
Enter Hiscore: Display the Hall of fame window, and enters a new score.
Usage: Enter Hiscore <var containing the score>

If the score did not make it to the score list, this trigger behaves exactly like Show Hiscores.

@ENDNODE Enter_Hiscore

@NODE Set_NTSC
Set NTSC: Forces the screen frequency, true = NTSC, false = PAL

@ENDNODE Set_NTSC

@NODE SFX_Enable
SFX Enable: Enables or disables SFX play

@ENDNODE SFX_Enable

@NODE Play_Anim_8
Play Anim 8: Play one of 8 anims depending on 8 direction
Usage: Play Anim 8 <#Up anim>

Requires 8 consecutive animations, in clock-wise order, starting with 
the Up/North one

@ENDNODE Play_Anim_8

@NODE Play_Anim_4
Play Anim 4: Play one of 4 anims depending on 4 direction
Usage: Play Anim 4 <#Up anim>

Requires 4 consecutive animations, in clock-wise order, starting with the 
Up/North one

@ENDNODE Play_Anim_4

@NODE Net_Connect
Net Connect: Tries to connect/disconnect to a remote machine running REDPILL

@ENDNODE Net_Connect

@NODE Set_Map_Cols
Set Map Cols: Activates/Deactivates map collisions

@ENDNODE Set_Map_Cols

@NODE Norm_Spd45
Norm Spd45: In case speed X and Y are not zero, "normalizes" them.

Not really normalizes the speed. It just decreases the speed values to match the same speed they will have if moving in only one axis.

@ENDNODE Norm_Spd45

@NODE Level#_to_Var
Level# to Var: Sets the <var
@NODE Level#_to_Var
 with the level number
Usage: Level# to Var <Var>

@ENDNODE Level#_to_Var

@NODE Prev_Level
Prev Level: Loads the Previous Level.
Usage: Prev level

Loads the previous level. All non static objects will be deleted.

@ENDNODE Prev_Level

@NODE Hud_Refresh
Hud Refresh: Refreshes the HUD graphic entirely allowing height change
Use it when changing other parts of the HUD that are not the Value Variable.
Usage:Hud Refresh <height>
If the parameter is greater than 0 it can change the HUD height.
It is slow, use it only when it is necessary.

@ENDNODE Hud_Refresh

@NODE Stamp
Stamp: Prints a game object icon in the visible screen
Usage: Stamp <gameobject>

Prints a game object icon in the visible screen. Most useful for big graphics in static screens.

@ENDNODE Stamp

@NODE Change_Icon
Change Icon: Changes the icon of the game object
Usage: Change Icon <#frame>

It can be used for debugging or for manual animation purposes

@ENDNODE Change_Icon

@NODE Play_AnimAngle
Play AnimAngle: Sets animation based in where the object is facing
Usage: Play AnimAngle <Anim> <#frames>

Set the first animation of the frames, the one facing to the top of the screen, the rest are in clockwise order.

@ENDNODE Play_AnimAngle

@NODE Count_Tile
Count Tile: Counts the number of times a tile appears in a map.
Usage: Count Tile <#tile> <var>

Count the number of times a tile appears in a map and stores it in a variable.
It is a CPU demanding operation, to use in certain events like On Level Load.

@ENDNODE Count_Tile

@NODE Sprite_To_GO
Sprite To GO: Sets the sprite layer to the position of an Object

@ENDNODE Sprite_To_GO

@NODE Sprite_Layer
Sprite Layer: Enables or not the level Sprite Layer

@ENDNODE Sprite_Layer

@NODE Sprite_Spd_X
Sprite Spd X: Sets the Sprite Layer Speed in the X axis

@ENDNODE Sprite_Spd_X

@NODE Stop_LoopSFX
Stop LoopSFX: Stops the loop sound being played

@ENDNODE Stop_LoopSFX

@NODE Set_Anim_Time_(Between_Frames)
Set Anim Time (Between Frames): Used to set the animation speed based in a Variable

@ENDNODE Set_Anim_Time_(Between_Frames)

@NODE Mul_Var
Mul Var: Multiplies a global variable by a number

@ENDNODE Mul_Var

@NODE Sprite_Spd_Y
Sprite Spd Y: Sets the Sprite Layer Speed in the Y axis

@ENDNODE Sprite_Spd_Y

@NODE Set_Sprite_Pos
Set Sprite Pos: Sets the sprite layer position
Usage: Set Sprite Pos <x> <y>
If <x> is lower than -1000 x position won't be updated
If <y> is lower than -1000 y position won't be updated
If sprite layer is attached to an object the link will be broken

@ENDNODE Set_Sprite_Pos

@NODE Orbitate_Parent
Orbitate Parent: Sets the angle of the object relative to the parent
Usage: Orbitate Parent <var>
<var> is the variable containing the angle in degrees

@ENDNODE Orbitate_Parent

@NODE Inst._Attached
Inst. Attached: Instantiates a new object attached to this one
Usage: Inst. Attached <game object>

@ENDNODE Inst._Attached

@NODE Custom1_To_Var
Custom1 To Var: The value of Custom1 is assigned to the specified Variable

@ENDNODE Custom1_To_Var

@NODE Custom2_To_Var
Custom2 To Var: The value of Custom1 is assigned to the specified Variable

@ENDNODE Custom2_To_Var

@NODE Set_Cam_Limits
Set Cam Limits: Sets the camera limits in tiles

@ENDNODE Set_Cam_Limits

@NODE Reset_Vars
Reset Vars: Sets a range of Variables to its initial state
Usage: Reset Vars <First var to reset> <Last var to reset>

@ENDNODE Reset_Vars

@NODE Play_SFX_Rnd
Play SFX Rnd: Plays a random sound from the defined range
Usage: Play SFX Rnd <#sound> <#sound>

Play SFX RND 4 6 will play sounds 4, 5 and 6 with approximately the same probability 


@ENDNODE Play_SFX_Rnd

@NODE Stop_CD32
Stop CD32: If the CD was playing, it stops it

@ENDNODE Stop_CD32

@NODE Set_FX_Level
Set FX Level: Sets the FX height for the level 

@ENDNODE Set_FX_Level

@NODE Change_Tiles_Properties
Change Tiles Properties: Changes solidity for all tiles

@ENDNODE Change_Tiles_Properties

@NODE Change_Tile_Properties
Change Tile Properties: Changes solidity of one tile

@ENDNODE Change_Tile_Properties

@NODE Instantiate
Instantiate: Creates another new game object based on a non static Object
Usage: Instantiate <Object> <x> <y>
The position is relative to the Object collision box

@ENDNODE Instantiate

@NODE Instantiate_4_Dir
Instantiate 4 Dir: Creates 4 new game objects based on a non static Object
Usage: Instantiate 4 Dir <Object> <offset>
The position is the center to the Object collision box in an offset radius.

@ENDNODE Instantiate_4_Dir

@NODE Set_Target_FPS
Set Target FPS: Allows to change the target FPS for the game

Usage: Set Target FPS <number>

Allowed values are: 50, 25, 17, 12

@ENDNODE Set_Target_FPS

@NODE FX_Mask
FX Mask: Sets the RGB color mask for the FX layer. Values are 0 or 1.

@ENDNODE FX_Mask

@NODE FX_Value
FX Value: Sets the FX layer effect to use and the color value

@ENDNODE FX_Value

@NODE Z_from_Father
Z from Father: For instantiated objects, sets the z from the instantiator object

@ENDNODE Z_from_Father

@NODE Save_Vars
Save Vars:Saves to disk a range of Variables
Usage: Save Vars <First var to reset> <Last var to reset>

@ENDNODE Save_Vars

@NODE Load_Vars
Load Vars: Loads from disk a range of Variables
Usage: Reset Vars <First var to reset> <Last var to reset>

@ENDNODE Load_Vars

@NODE Destroy_Child(ren)
Destroy Child(ren): Destroys all objects whose parent is the current object

@ENDNODE Destroy_Child(ren)

@NODE Print_Var
Print Var: Prints a variable in the screen
Usage: Print Var <Global variable> <color>

The color is the one used to print the text

@ENDNODE Print_Var

@NODE Print_Text
Print Text: Prints a game text in the screen
Usage: Print Text <Game text> <color>

The color is the one used to print the text

@ENDNODE Print_Text

@NODE Remap_Color
Remap Color: Changes a color of the frames contained in one animation
Usage: Change Color <#animation> <#Color to replace> <#Color>

For all the frames present in the animation if the color to be replaced is used, it is changed for the specified color. The palette is not changed, the image is.

@ENDNODE Remap_Color

@NODE Var_Int
Var Int: Converts the value of the Variable to a Integer value
Usage: Var Int <variable> <round>

Use round = True to make the variable round up to the closest integer. For example, 2.7 will round up to 3. Otherwise Var Int of 2.7 will be 2.

@ENDNODE Var_Int

@NODE Var_Clamp
Var Clamp: Makes sure the value of the Variable is between two values.
Usage: Var Clamp <variable> <lowernumber> <highernumber>

@ENDNODE Var_Clamp

@NODE Pos_X_Clamp
Pos X Clamp: Makes sure the position x of the object is between two values

@ENDNODE Pos_X_Clamp

@NODE Pos_Y_Clamp
Pos Y Clamp: Makes sure the position y of the object is between two values

@ENDNODE Pos_Y_Clamp

@NODE Count_Tile_Tag
Count Tile Tag: Counts all the tiles in the map with a certain tag
And stores the number into a Variable.

@ENDNODE Count_Tile_Tag

@NODE Attach_to_collision
Attach to collision: The object gets attached to the last one it collided with

@ENDNODE Attach_to_collision

@NODE Emit_Particle
Emit Particle: Emits a particle of a certain type

@ENDNODE Emit_Particle

@NODE Follow_Obj_Free
Follow Obj Free: Follow Object specified with a certain speed
Usage: Follow Obj Free: <Obj> <Speed>

Will follow the object with free angle

@ENDNODE Follow_Obj_Free
>
>
@NODE CONDITIONS
@{"Always" link "Always"}
@{"Once" link "Once"}
@{"Never" link "Never"}
@{"Input Left" link "Input_Left"}
@{"Input Right" link "Input_Right"}
@{"Input Up" link "Input_Up"}
@{"Input Down" link "Input_Down"}
@{"Input Fire 1" link "Input_Fire_1"}
@{"Input Fire 2" link "Input_Fire_2"}
@{"Idle" link "Idle"}
@{"Collides Player" link "Collides_Player"}
@{"Collides H Wall" link "Collides_H_Wall"}
@{"Collides Wall" link "Collides_Wall"}
@{"Tile is" link "Tile_is"}
@{"X Var Triggered" link "X_Var_Triggered"}
@{"Var True" link "Var_True"}
@{"Var Is" link "Var_Is"}
@{"Var False" link "Var_False"}
@{"Countdown" link "Countdown"}
@{"Position X" link "Position_X"}
@{"Position Y" link "Position_Y"}
@{"Collides Obj" link "Collides_Obj"}
@{"Target Pos X" link "Target_Pos_X"}
@{"Target Pos Y" link "Target_Pos_Y"}
@{"Grounded" link "Grounded"}
@{"Not Grounded" link "Not_Grounded"}
@{"Timer active" link "Timer_active"}
@{"Has Col Left" link "Has_Col_Left"}
@{"Has Col Right" link "Has_Col_Right"}
@{"Has Col Up" link "Has_Col_Up"}
@{"Has Col Down" link "Has_Col_Down"}
@{"Side X" link "Side_X"}
@{"Dist to Target" link "Dist_to_Target"}
@{"Speed X" link "Speed_X"}
@{"Speed Y" link "Speed_Y"}
@{"Speed (Angle)" link "Speed_(Angle)"}
@{"Angle is" link "Angle_is"}
@{"Anim is" link "Anim_is"}
@{"Frame is" link "Frame_is"}
@{"Anim finishes" link "Anim_finishes"}
@{"Tile Comp" link "Tile_Comp"}
@{"Free Tile" link "Free_Tile"}
@{"Solid Tile" link "Solid_Tile"}
@{"Level is" link "Level_is"}
@{"Collides Type" link "Collides_Type"}
@{"Is on screen" link "Is_on_screen"}
@{"Is off screen" link "Is_off_screen"}
@{"Anim is not" link "Anim_is_not"}
@{"CD32 Play" link "CD32_Play"}
@{"CD32 Reverse" link "CD32_Reverse"}
@{"CD32 Forward" link "CD32_Forward"}
@{"CD32 Green" link "CD32_Green"}
@{"CD32 Yellow" link "CD32_Yellow"}
@{"CD32 Red" link "CD32_Red"}
@{"CD32 Blue" link "CD32_Blue"}
@{"Input Options" link "Input_Options"}
@{"GO Custom1 is" link "GO_Custom1_is"}
@{"GO Custom2 is" link "GO_Custom2_is"}
@{"GO Timer Trig" link "GO_Timer_Trig"}
@{"On Level Load" link "On_Level_Load"}
@{"Collides in X" link "Collides_in_X"}
@{"Collides in Y" link "Collides_in_Y"}
@{"On FadeOut Over" link "On_FadeOut_Over"}
@{"Timer not active" link "Timer_not_active"}
@{"Answer" link "Answer"}
@{"Probability" link "Probability"}
@{"Probab. Var" link "Probab._Var"}
@{"Collides Target" link "Collides_Target"}
@{"Var comp Var" link "Var_comp_Var"}
@{"Anim Comp" link "Anim_Comp"}
@{"Tile on Screen" link "Tile_on_Screen"}
@{"Tile on Map" link "Tile_on_Map"}
@{"Input Active" link "Input_Active"}
@{"Grounded" link "Grounded"}
@{"Obj Display X" link "Obj_Display_X"}
@{"Obj Display Y" link "Obj_Display_Y"}
@{"Is Net Remote" link "Is_Net_Remote"}
@{"On Net Connect" link "On_Net_Connect"}
@{"Repeat every" link "Repeat_every"}
@{"Tile Type is" link "Tile_Type_is"}
@{"Is NTSC" link "Is_NTSC"}
@{"Is AGA" link "Is_AGA"}
@{"On Landed" link "On_Landed"}
@{"Contains Tile" link "Contains_Tile"}
@{"Col Type Count" link "Col_Type_Count"}
@{"To All Colls" link "To_All_Colls"}
@{"Tile on Border" link "Tile_on_Border"}
@{"Col Obj Count" link "Col_Obj_Count"}
@{"Display Ready" link "Display_Ready"}
@{"CD Playing" link "CD_Playing"}
@{"Tile Tag is" link "Tile_Tag_is"}
@{"Cam Pos X" link "Cam_Pos_X"}
@{"Cam Pos Y" link "Cam_Pos_Y"}
@{"Contains Tile Tag" link "Contains_Tile_Tag"}
@{"Can Anim Start" link "Can_Anim_Start"}
@{"Anim Frame is" link "Anim_Frame_is"}
@{"Obj Type Count" link "Obj_Type_Count"}
@{"Obj Count" link "Obj_Count"}
@{"From Editor" link "From_Editor"}
@{"CPU is" link "CPU_is"}
@{"Is attached" link "Is_attached"}

@ENDNODE CONDITIONS

@NODE ACTIONS
@{"Nothing" link "Nothing"}
@{"Set Speed X" link "Set_Speed_X"}
@{"Set Speed Y" link "Set_Speed_Y"}
@{"Set Acc X" link "Set_Acc_X"}
@{"Set Acc Y" link "Set_Acc_Y"}
@{"Play Anim" link "Play_Anim"}
@{"Stop Anim" link "Stop_Anim"}
@{"Resume Anim" link "Resume_Anim"}
@{"Turn Back" link "Turn_Back"}
@{"Deactivate" link "Deactivate"}
@{"Destroy" link "Destroy"}
@{"Random Dir 4" link "Random_Dir_4"}
@{"Change tile" link "Change_tile"}
@{"Go to level" link "Go_to_level"}
@{"Move to col" link "Move_to_col"}
@{"Time to live" link "Time_to_live"}
@{"Instantiate" link "Instantiate"}
@{"Trig Var X" link "Trig_Var_X"}
@{"Toggle Var" link "Toggle_Var"}
@{"Set Var" link "Set_Var"}
@{"Inc Var" link "Inc_Var"}
@{"Activate Timer" link "Activate_Timer"}
@{"Set Text" link "Set_Text"}
@{"Load Bitmap" link "Load_Bitmap"}
@{"Quit" link "Quit"}
@{"Set Position" link "Set_Position"}
@{"Inv Speed X" link "Inv_Speed_X"}
@{"Inv Speed Y" link "Inv_Speed_Y"}
@{"Set Target" link "Set_Target"}
@{"Set Position X" link "Set_Position_X"}
@{"Set Position Y" link "Set_Position_Y"}
@{"Set Thrust" link "Set_Thrust"}
@{"Inc Thrust" link "Inc_Thrust"}
@{"Set Angle" link "Set_Angle"}
@{"Inc Angle" link "Inc_Angle"}
@{"Frame by Angle" link "Frame_by_Angle"}
@{"Speed On Col" link "Speed_On_Col"}
@{"Play Mod+SFX" link "Play_Mod+SFX"}
@{"Stop Mod" link "Stop_Mod"}
@{"Play Sound" link "Play_Sound"}
@{"Set Gravity" link "Set_Gravity"}
@{"Set Weight" link "Set_Weight"}
@{"Overwrite Color" link "Overwrite_Color"}
@{"Overwrite Gradient" link "Overwrite_Gradient"}
@{"Camera Follow" link "Camera_Follow"}
@{"Next Level" link "Next_Level"}
@{"Reload Level" link "Reload_Level"}
@{"Restart Level" link "Restart_Level"}
@{"Change Offset" link "Change_Offset"}
@{"Change Size" link "Change_Size"}
@{"HUDLabel On" link "HUDLabel_On"}
@{"HUDLabel Off" link "HUDLabel_Off"}
@{"Camera Pos" link "Camera_Pos"}
@{"Camera Inc" link "Camera_Inc"}
@{"Set Visible" link "Set_Visible"}
@{"Screen shake" link "Screen_shake"}
@{"Screen flash" link "Screen_flash"}
@{"Set var to var" link "Set_var_to_var"}
@{"Inc var with var" link "Inc_var_with_var"}
@{"Instantiate X" link "Instantiate_X"}
@{"Instantiate Y" link "Instantiate_Y"}
@{"InstantiateXY" link "InstantiateXY"}
@{"Inc Pos" link "Inc_Pos"}
@{"Set Global RND" link "Set_Global_RND"}
@{"Set Custom1" link "Set_Custom1"}
@{"Set Custom2" link "Set_Custom2"}
@{"Inc Custom1" link "Inc_Custom1"}
@{"Inc Custom2" link "Inc_Custom2"}
@{"Set GO Timer" link "Set_GO_Timer"}
@{"Set Custom1 RND" link "Set_Custom1_RND"}
@{"Set Custom2 RND" link "Set_Custom2_RND"}
@{"Set GO Timer RND" link "Set_GO_Timer_RND"}
@{"Global to Spd X" link "Global_to_Spd_X"}
@{"Global to Spd Y" link "Global_to_Spd_Y"}
@{"Set Pos to Obj" link "Set_Pos_to_Obj"}
@{"Play Mod" link "Play_Mod"}
@{"Hit>Set Custom1" link "Hit>Set_Custom1"}
@{"Hit>Set Custom2" link "Hit>Set_Custom2"}
@{"Hit>Inc Custom1" link "Hit>Inc_Custom1"}
@{"Hit>Inc Custom2" link "Hit>Inc_Custom2"}
@{"Halt Triggers" link "Halt_Triggers"}
@{"Mutate To" link "Mutate_To"}
@{"Show Text" link "Show_Text"}
@{"Show Dialog" link "Show_Dialog"}
@{"Attach to" link "Attach_to"}
@{"Detach" link "Detach"}
@{"Attach Offset" link "Attach_Offset"}
@{"HUD On" link "HUD_On"}
@{"HUD Off" link "HUD_Off"}
@{"GO Blink" link "GO_Blink"}
@{"GO Flash" link "GO_Flash"}
@{"Keep on screen" link "Keep_on_screen"}
@{"Change Tiles" link "Change_Tiles"}
@{"Save Checkpoint" link "Save_Checkpoint"}
@{"Load Checkpoint" link "Load_Checkpoint"}
@{"Reset Checkpoint" link "Reset_Checkpoint"}
@{"Change Type" link "Change_Type"}
@{"Fade Out" link "Fade_Out"}
@{"Fade In" link "Fade_In"}
@{"Keep on map" link "Keep_on_map"}
@{"Check Exits" link "Check_Exits"}
@{"Set Exit U" link "Set_Exit_U"}
@{"Set Exit D" link "Set_Exit_D"}
@{"Set Exit L" link "Set_Exit_L"}
@{"Set Exit R" link "Set_Exit_R"}
@{"Hitstop" link "Hitstop"}
@{"Impact" link "Impact"}
@{"Recoil" link "Recoil"}
@{"Set C1 with Var" link "Set_C1_with_Var"}
@{"Inc C1 with Var" link "Inc_C1_with_Var"}
@{"Set C2 with Var" link "Set_C2_with_Var"}
@{"Inc C2 with Var" link "Inc_C2_with_Var"}
@{"Sort by Z" link "Sort_by_Z"}
@{"Set Z From Y" link "Set_Z_From_Y"}
@{"Play SFX L+R" link "Play_SFX_L+R"}
@{"New Question" link "New_Question"}
@{"Add Answer" link "Add_Answer"}
@{"Ask Question" link "Ask_Question"}
@{"Angle to Target" link "Angle_to_Target"}
@{"Tiled Move" link "Tiled_Move"}
@{"Tiled Push" link "Tiled_Push"}
@{"Play CD32" link "Play_CD32"}
@{"Target closest" link "Target_closest"}
@{"Count Type" link "Count_Type"}
@{"Mul Speed Var" link "Mul_Speed_Var"}
@{"Set Display Pos" link "Set_Display_Pos"}
@{"Go to <Var> Level" link "Go_to_<Var>_Level"}
@{"Follow Obj 8 Dir" link "Follow_Obj_8_Dir"}
@{"Input Active" link "Input_Active"}
@{"Show Hiscores" link "Show_Hiscores"}
@{"Enter Hiscore" link "Enter_Hiscore"}
@{"Set NTSC" link "Set_NTSC"}
@{"SFX Enable" link "SFX_Enable"}
@{"Play Anim 8" link "Play_Anim_8"}
@{"Play Anim 4" link "Play_Anim_4"}
@{"Net Connect" link "Net_Connect"}
@{"Set Map Cols" link "Set_Map_Cols"}
@{"Norm Spd45" link "Norm_Spd45"}
@{"Level# to Var" link "Level#_to_Var"}
@{"Prev Level" link "Prev_Level"}
@{"Hud Refresh" link "Hud_Refresh"}
@{"Stamp" link "Stamp"}
@{"Change Icon" link "Change_Icon"}
@{"Play AnimAngle" link "Play_AnimAngle"}
@{"Count Tile" link "Count_Tile"}
@{"Sprite To GO" link "Sprite_To_GO"}
@{"Sprite Layer" link "Sprite_Layer"}
@{"Sprite Spd X" link "Sprite_Spd_X"}
@{"Stop LoopSFX" link "Stop_LoopSFX"}
@{"Set Anim Time (Between Frames)" link "Set_Anim_Time_(Between_Frames)"}
@{"Mul Var" link "Mul_Var"}
@{"Sprite Spd Y" link "Sprite_Spd_Y"}
@{"Set Sprite Pos" link "Set_Sprite_Pos"}
@{"Orbitate Parent" link "Orbitate_Parent"}
@{"Inst. Attached" link "Inst._Attached"}
@{"Custom1 To Var" link "Custom1_To_Var"}
@{"Custom2 To Var" link "Custom2_To_Var"}
@{"Set Cam Limits" link "Set_Cam_Limits"}
@{"Reset Vars" link "Reset_Vars"}
@{"Play SFX Rnd" link "Play_SFX_Rnd"}
@{"Stop CD32" link "Stop_CD32"}
@{"Set FX Level" link "Set_FX_Level"}
@{"Change Tiles Properties" link "Change_Tiles_Properties"}
@{"Change Tile Properties" link "Change_Tile_Properties"}
@{"Instantiate" link "Instantiate"}
@{"Instantiate 4 Dir" link "Instantiate_4_Dir"}
@{"Set Target FPS" link "Set_Target_FPS"}
@{"FX Mask" link "FX_Mask"}
@{"FX Value" link "FX_Value"}
@{"Z from Father" link "Z_from_Father"}
@{"Save Vars" link "Save_Vars"}
@{"Load Vars" link "Load_Vars"}
@{"Destroy Child(ren)" link "Destroy_Child(ren)"}
@{"Print Var" link "Print_Var"}
@{"Print Text" link "Print_Text"}
@{"Remap Color" link "Remap_Color"}
@{"Var Int" link "Var_Int"}
@{"Var Clamp" link "Var_Clamp"}
@{"Pos X Clamp" link "Pos_X_Clamp"}
@{"Pos Y Clamp" link "Pos_Y_Clamp"}
@{"Count Tile Tag" link "Count_Tile_Tag"}
@{"Attach to collision" link "Attach_to_collision"}
@{"Emit Particle" link "Emit_Particle"}
@{"Follow Obj Free" link "Follow_Obj_Free"}

@ENDNODE ACTIONS

@NODE MAIN REDPILL
@{"Trigger Conditions" link "CONDITIONS"}
@{"Trigger Actions" link "ACTIONS"}

@ENDNODE MAIN REDPILL
