>Always: Condition is always true
Usage: Always

This condition is always triggered. Use it when you want a trigger to execute the actions every tick.
>Once: Condition will be true once, then always false
Usage: Once

This condition is only true once. After the creation of the game object condition will be true and after that it will always be false. Use it to initialize things in your game object.
>Never: Condition will never be true, preventing action/s execution
Usage: Never

This condition is never triggered, it is only useful when you want to deactivate temporally one of your triggers. It will consume some valuable CPU, if you won't use the trigger is is better to delete it.
>Input Left: True if player is pressing left
Usage: Input Left <status> <player #>

Checks the if the status of left input is true for the specified player.

Example: Input Left Pressed Player 1 checks if left is pressed for Player 1.
>Input Right: True if player is pressing right
Usage: Input Right <status> <player #>

Checks the if the status of right input is true for the specified player.
>Input Up: True if player is pressing up
Usage: Input Up <status> <player #>

Checks the if the status of up input is true for the specified player.
>Input Down: True if player is pressing down
Usage: Input Down <status> <player #>

Checks the if the status of down input is true for the specified player.
>Input Fire 1: True if player is pressing fire
Usage: Input Fire 1 <status> <player #>

Checks the if the status of up Fire 1 is true for the specified player.
>Input Fire 2: True if player is pressing the second fire button
Usage: Input Fire 2 <status> <player #>

Checks the if the status of fire 2 input is true for the specified player.
>Idle: True when the object is not moving at all
Usage: Idle

True when the object is not moving at all, it is not related with player input.
>Collides Player
Usage: Collides Player

Returns true when the object overlaps the collision box of object number 0.
>Collides H Wall: Checks if object collides laterally with a solid tile
Usage: Collides H Wall

Returns true if the object has collides laterally with a solid tile of the map.
>Collides Wall: Checks if object collides with a solid tile
Usage: Collides Wall

Returns true if the object has collides with a solid tile of the map.
>Tile is: True when the object is this tile
Usage: Tile is <Tile number>

>X Var Triggered
Usage: X Var Triggered <global var> <boolean>

This condition will be true for one tick if boolean is true. For trigger vars this in when one action triggers this global var. For timers it is when the time finishes.
If the boolean value is false the trigger will be true except the tick when it is triggered.
>Var True
Usage: Var True <global var>

Used to check if a boolean global var is true.
>Var Is
Usage: <global var> <comparator> <number>

This condition will compare a global var with a number.

Example: Lives > 0 will be true when the global var "Lives" value is 1 or more.
>Var False
Usage: Var False <global var>

Used to check if a boolean global var is false.
>Countdown: True after the time specified as parameter the condition
Usage: Countdown <miliseconds>

After the time specified as parameter the condition will return true once.

Example: Countdown 5000 will execute the trigger after 5 seconds have passed.
>Position X: Compares the X position of the object
Usage: Position X <comparison> <number>
>Position Y: Compares the Y position of the object
Usage: Position Y <comparison> <number>
>Collides Obj: Check if collides with the specified object
Usage: Collides Object <game object>

Returns true when the object overlaps the collision box of the specified game object. When the game object is non static, any game object instance will trigger the condition.
>Target Pos X
Usage: Target Pos X <comparator> <game object>

Compares the position in the x axis versus the position of the specified static game object.

Example: Target Pos X < My Player will be true when the x coordinate of the object is less than the x coordinate of My Player object.
>Target Pos Y
Usage: Target Pos Y <comparator> <game object>

Compares the position in the y axis versus the position of the specified static game object.

Example: Target Pos Y < My Player will be true when the y coordinate of the object is less than the y coordinate of My Player object.
>Grounded: True when the object is in the floor
Usage: Grounded

True when the object is in the floor
>Not Grounded: True when the object is not in the floor
Usage: Not Grounded

True when the object is not in the floor
>Timer active
Timer Active <global var>

Use this condition to check if a timer has been activated.
>Has Col Left: Left side of object has collided with the Map
Usage: Has Col Left

Left side of object has collided with the Map
>Has Col Right: Right side of object has collided with the Map
Usage: Has Col Right

Right side of object has collided with the Map
>Has Col Up: Upper side of object has collided with the Map
Usage: Has Col Up

Upper side of object has collided with the Map
>Has Col Down: Lower side of object has collided with the Map
Usage: Has Col Down

Lower side of object has collided with the Map
>Side X: Checks if object is looking left or right
Usage: Side X <Left/Right>

Checks if object is looking left or right
>Dist to Target
Usage: Dist to Target <comparator> <number>

Returns true when the comparison of the distance to the target game object and the specified number is true.

The target can be specified with the action Set Target.
>Speed X: Checks the speed in X
Usage: Speed X <comparator> <number>

Checks the speed in X
>Speed Y: Checks the speed in Y
Usage: Speed X <comparator> <number>

Checks the speed in Y

>Speed (Angle): Compares the object global speed
Usage: Speed <comparator> <number>

Compares the object global speed
>Angle is: Compares the angle of the object
Usage: Angle is <comparator> <number>

Compares the angle of the object
>Anim is: Check if this object is playing this anim
Usage: Anim is <anim>

Check if this object is playing this anim
>Frame is: Check the current frame
True when the frame is the specified one, not inside the animation but the 
absolute one.

Usage: Frame <#frame>
>Anim finishes: Check if the animation has finished playing
True when animation has finished playing

Usage: Anim finishes <animation> <check mirror anim>
>Tile Comp: Compared the tile the object is in
It usess the center of the object collision box

Usage: Tile Comp <comparator> <number>
>Free Tile: Checks if the object is in a non solid tile
Usage: Free Tile <x offset> <y offset>

x and y are in tiles. Left and up are negative, Right and down use positive values.

>Solid Tile: Checks if the object is in a solid Tile

Usage: Solid Tile
>Level is: Compares the current level number
Usage: Level is <comparator> <number>
This condition checks if the game is in a specific level. With the comparator you can apply the condition to multiple levels.
Example: Level is > 0 checks that the current level is not level 0.
>Collides Type
Usage: Collides Object <game object type>

Returns true when the object overlaps the collision box of any object of the specified game object type.
>Is on screen: Checks if the object is inside the screen
Usage: Is on screen

>Is off screen: Checks if the object is outside the screen
Usage: Is off screen

>Anim is not: Checks if the anim is not this one
Usage: Anim is not <anim>

>CD32 Play
Usage: CD32 Play <status> <player #>

Checks the if the status of the CD32 Play button is true for the specified player.
>CD32 Reverse
Usage: CD32 Reverse <status> <player #>

Checks the if the status of the CD32 Reverse button is true for the specified player.
>CD32 Forward
Usage: CD32 Forward <status> <player #>

Checks the if the status of the CD32 Forward button is true for the specified player.
>CD32 Green
Usage: CD32 Green <status> <player #>

Checks the if the status of the CD32 Green button is true for the specified player.
>CD32 Yellow
Usage: CD32 Yellow <status> <player #>

Checks the if the status of the CD32 Yellow button is true for the specified player.
>CD32 Red
Usage: CD32 Red <status> <player #>

Checks the if the status of the CD32 Red button is true for the specified player.
>CD32 Blue
Usage: CD32 Blue <status> <player #>

Checks the if the status of the CD32 Blue button is true for the specified player.
>Input Options
Usage: Input Option <status>

Checks the if the status of the key assigned to input is true
>GO Custom1 is
Usage: GO Custom 1 <comparator> <number>

This condition will compare the game object var #1 with a number.
>GO Custom2 is
Usage: GO Custom 2 <comparator> <number>

This condition will compare the game object var #2 with a number.
>GO Timer Trig
Usage: GO Timer Trig


This condition will be true when the game object timer is over.

>On Level Load: Triggered each time a level finishes loading.
Usage: On Level Load

This condition is triggered each time a level is loaded. It is useful to initialize anything after a level is loaded.
>Collides in X: Checks if collides with the target in the X axis
Usage: Collides in X

>Collides in Y: Checks if collides with the target in the Y axis
Usage: Collides in Y

>On FadeOut Over: True after a fade out finishes
Usage: On FadeOut Over

>Timer not active
Usave: Timer not active <global var>

Use this condition to check if a timer is not active.
>Answer: Checks the answer to the Question asked in a dialogue
>Probability: Between 0 and 100 to happen
Usage: Probability <number>
>Probab. Var: It is true with a defined probability
>Collides Target: Checks if the object is colliding with its target
>Var comp Var: Compares two variables

>Anim Comp: Compares the current Animation of the Object
Usage: Anim Comp <comparator> <number>

Checks the current active Animation of the Object

>Tile on Screen: Does actions for each tile of this type in the screen
If there is a tile in the screen, for each tile the actions will be executed using the position of the tile as the object position.

Second parameter is the border tiles, to check outside the screen.
>Tile on Map: Does action for each tile of this type in the level map
If there is a tile in the map, for each tile the actions will be executed using the position of the tile as the object position.
>Input Active: Checks if the Input is Enabled or disabled
>Grounded: True when the object is(not) in the floor, depending on parameter
Usage: Grounded <yes/no> <#ticks>

True when the object is in the floor and first parameter is true
True when the object is not in the floor and first parameter is false
ticks > 0 for coyote time, will return true if it was grounded #ticks ago.
>Obj Display X: Compares screen position X of the object
Usage Obj Display X <comparator> <number>
>Obj Display Y: Compares screen position Y of the object
Usage Obj Display X <comparator> <number>
>Is Net Remote: Checks if a player is the remote one or the local one
Usage: Is Net remote <#Player> <true/false>

For true the condition will check if machine is server one and Player is 1, or if machine is client and Player is 2.
>On Net Connect: Checks if TCP connexion has been established or not
>Repeat every: Every time the specified time goes by will return true
Usage: Repeat every <miliseconds>

Every time the specified time goes by the condition will return true once.

Example: Repeat every 5000 will execute the trigger after 5 seconds have passed.
>Tile Type is: Checks the type of tile the object is in
Usage: Tile Type is <type_of_tile>

Checks if the tile the object is Non Solid, Platform or Solid
>Is NTSC: Checks if the machine the game is running on is in NTSC mode
>Is AGA: Checks if the machine the game is running on is AGA
>On Landed: It is triggered the moment the object hits the ground

Only triggered the frame the objects hit the ground
>Contains Tile: Detects if the object area is colliding with a Tile
>Col Type Count: Counts the number of objects of the defined type colliding with the object
Usage: Col Obj Count <Obj type> <number>

True if the number of objets colliding is at least <number>
>To All Colls: Executes a object trigger in all colliding objects
Usage: To All Cools <trigger number>
Col Obj/Type Count trigger must be executed first.

The parameter is the trigger to be executed from the COLLIDED object, not the current one.
If there are colliding objects the current trigger will be executed for the current object.

>Tile on Border: Does actions for each tile of this type in the border of the screen
If there is a tile in the border of the screen, for each tile the actions will be executed using the position of the tile as the object position.

Usage: Tile on Border <#Tile>
>Col Obj Count: Counts the number of objects of that type colliding with the object
Usage: Col Obj Count <Obj> <number>

True if the number of objets colliding is at least <number>
>Display Ready: True when the display is active after warm up

Usage: Display Ready
>CD Playing: Checks if CD audio is playing or not
Usage: CD Playing <boolean> 
>Tile Tag is: Checks the tile tag the object is in
Usage: Tile Tag is <tag> <boolean>

Set second parameter to false to check if the tile has other tag than the specified one.
Tile tags can be set in the Tile Properties screen inside the Tileset menu.
>Cam Pos X: Checks the horizontal camera position
Usage: Cam Pos X <comparator> <number> 
>Cam Pos Y: Checks the vertical camera position
Usage: Cam Pos Y <comparator> <number> 
>Contains Tile Tag: Checks if tiles object is in contact with contains a tag
Usage: Contains Tile Tag <tag> <boolean>

Set second parameter to false to check if the tile has other tag than the specified one.
Tile tags can be set in the Tile Properties screen inside the Tileset menu.
>Can Anim Start: Cheks if the anim has finished or it is interruptible
Usage: Can Anim Start <boolean>

Set boolean to False to check the contrary
>Anim Frame is: Checks the current animation frame
>Obj Type Count: Counts the number of objects of one type and compares it to a number.
Usage: Obj Type Count <comparison> <number>
>Obj Count: Counts the number of objects and compares it to a number.
Usage: Obj Count <comparison> <number>
>From Editor: Checks if the game is running from editor or standalone
Usage: From Editor <boolean>

To check if game is running from Editor use From Editor TRUE. To check if game is running from Player use From Editor FALSE.
>CPU is: Checks the Motorola processor
Usage: CPU is <comparison> <number>

0-68000, 1-68010, 2-68020, 3-68030, 4-68040, 8-Apollo
>Is attached: Checks if the object is attached to another one
Usage: Is attached True/False
>
>